services:
  postgres:
    image: postgres:16-alpine
    container_name: backend-crm-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Postgres123!
      POSTGRES_DB: backend_crm
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d backend_crm" ]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: .
      target: dev
    container_name: backend-crm-api
    ports:
      - "3000:3000"
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - ./docker/entrypoint.sh:/usr/src/app/entrypoint.sh:ro

    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  adminer:
    image: adminer
    container_name: backend-crm-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pgdata:
